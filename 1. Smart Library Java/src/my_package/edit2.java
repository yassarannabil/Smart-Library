/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my_package;

import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author AILEEN
 */
public class edit2 extends javax.swing.JFrame {
   private String bookId;
    
    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        java.awt.Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    /**
     * Creates new form edit2
     * @param bookId
     */
    public edit2(String bookId) {
        initComponents();
        this.bookId = bookId;
        // Implement logic to load book data based on the bookId from the database
        // Update the text fields with the book data
        loadBookData();
    }
    
   private void loadBookData() {
    try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "");
                     Statement stat = con.createStatement();
PreparedStatement pstmt = con.prepareStatement("SELECT * FROM buku WHERE id_buku = ?")) {

        pstmt.setString(1, bookId);
        ResultSet res = pstmt.executeQuery();

        if (res.next()) {
            title.setText(res.getString("title"));
            author.setText(res.getString("author"));

            // Set the selected item in the JComboBox
            String loadedCategory = res.getString("category");
            category.setSelectedItem(loadedCategory);

            quantity.setText(res.getString("quantity"));
        } else {
            JOptionPane.showMessageDialog(rootPane, "Book with ID " + bookId + " not found.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, e);
    }
}



    private void updateBookData() {
    try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "");
         PreparedStatement pstmt = con.prepareStatement("UPDATE buku SET title=?, author=?, category=?, quantity=? WHERE id_buku=?")) {

        pstmt.setString(1, title.getText());
        pstmt.setString(2, author.getText());

        // Get the selected item from the JComboBox
        String editedCategory = (String) category.getSelectedItem();
        pstmt.setString(3, editedCategory);

        pstmt.setString(4, quantity.getText());
        pstmt.setString(5, bookId);

        int rowsAffected = pstmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(rootPane, "Book data updated successfully.");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Failed to update book data.");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, e);
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        author = new javax.swing.JTextField();
        title = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        category = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(237, 202, 151));
        jButton2.setText("back");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, -1));

        jButton3.setBackground(new java.awt.Color(237, 178, 115));
        jButton3.setText("save");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, 60, -1));

        author.setBackground(new java.awt.Color(237, 202, 151));
        author.setText("input author");
        author.setBorder(null);
        author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorActionPerformed(evt);
            }
        });
        getContentPane().add(author, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 420, -1));

        title.setBackground(new java.awt.Color(237, 202, 151));
        title.setText("input title");
        title.setBorder(null);
        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 420, -1));

        quantity.setBackground(new java.awt.Color(237, 202, 151));
        quantity.setText("input quantity");
        quantity.setBorder(null);
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        getContentPane().add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 420, -1));

        category.setBackground(new java.awt.Color(237, 202, 151));
        category.setForeground(new java.awt.Color(102, 102, 102));
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "fiksi", "nonfiksi" }));
        category.setBorder(null);
        getContentPane().add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 450, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_component/edit (2).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        close();
        home home  = new home();
        home.setVisible(rootPaneCheckingEnabled); // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         // Update the book data in the database
        updateBookData();

        // Close the current window
        close();

        // Navigate back to the home page
        home home = new home();
        home.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(edit2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            // Pass the book ID when creating an instance of edit2
        new edit2("yourActualBookId").setVisible(true);
        }
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables

   
}
